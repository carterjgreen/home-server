---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: authelia
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  sources:
    - repoURL: https://charts.authelia.com/
      chart: authelia
      targetRevision: 0.10.22
      helm:
        releaseName: authelia
        valuesObject:
          annotations:
            reloader.stakater.com/auto: "true"
          ingress:
            enabled: true
            annotations:
              kubernetes.io/ingress.class: traefik-external
            tls:
              secret: juicewizerd-le-com-tls
            traefikCRD:
              enabled: true
              entryPoints:
                - websecure
          pod:
            kind: DaemonSet
            env:
              - name: TZ
                value: America/Toronto
            resources:
              limits:
                cpu: "4.00"
                memory: 125Mi
              requests:
                cpu: "0.25"
                memory: 50Mi
          secret:
            existingSecret: authelia
            additionalSecrets:
              authelia:
                items:
                  - key: "oidc.jwk.RS256.pem"
            certificates:
              existingSecret: authelia
          configMap:
            server:
              buffers:
                read: 10485760 # Large for calibre web
                write: 8192
            log:
              format: json
            telemetry:
              metrics:
                enabled: true
                serviceMonitor:
                  enabled: true
            theme: auto
            totp:
              issuer: &domain juicewizerd.com
            authentication_backend:
              ldap:
                enabled: true
                implementation: custom
                address: ldap://lldap-service.lldap.svc.cluster.local:3890
                timeout: 5s
                start_tls: false
                base_dn: dc=juicewizerd,dc=com
                username_attribute: uid
                additional_users_dn: ou=people
                users_filter: "(&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))"
                additional_groups_dn: ou=groups
                groups_filter: "(member={dn})"
                group_name_attribute: cn
                mail_attribute: mail
                display_name_attribute: displayName
                user: uid=admin,ou=people,dc=juicewizerd,dc=com
            access_control:
              default_policy: two_factor
              rules:
                - domain: # Already hass 2FA
                    - "hass.juicewizerd.com"
                  policy: bypass
                # Kobo bypass
                - domain: "books.juicewizerd.com"
                  policy: bypass
                  resources:
                    - "^/kobo([/?].*)?$"
                # Home assistant app bypass
                - domain:
                    - "hass.juicewizerd.com"
                  policy: bypass
                  resources:
                    - "^/api([/?].*)?$"
                    - "^/auth/token.*"
                    - "^/.external_auth=.*"
                    - "^/service_worker.js"
                    - "^/static.*"
                    - "^/local.*"
                    - "^/hacsfiles.*"
                    - "^/frontend_latest.*"
            session:
              redis:
                enabled: true
                host: redis-headless.database.svc.cluster.local
              cookies:
                - domain: *domain
                  subdomain: auth
            storage:
              postgres:
                enabled: true
                address: postgres-rw.database.svc.cluster.local
            notifier:
              smtp:
                enabled: true
                enabledSecret: true
                address: smtp://smtp.gmail.com:587
                timeout: 20s
                username: juicewizerd@gmail.com
                sender: juicewizerd@gmail.com
                identifier: *domain
            identity_providers:
              oidc:
                enabled: true
                jwks:
                  - key:
                      path: "/secrets/authelia/oidc.jwk.RS256.pem"
                cors:
                  endpoints:
                    ["authorization", "token", "revocation", "introspection"]
                  allowed_origins_from_client_redirect_uris: true
                clients:
                  - client_id: grafana
                    description: Grafana
                    client_secret: "$argon2id$v=19$m=65536,t=3,p=4$FLt03HU9Jc8771XThBjsxA$Jqb+Op0qM+FzuMZHnfvARqElHeW6Rr07XS5Z0KUu6W4"
                    public: false
                    authorization_policy: "two_factor"
                    require_pkce: true
                    pkce_challenge_method: "S256"
                    redirect_uris:
                      - "https://graf.juicewizerd.com/login/generic_oauth"
                    scopes:
                      - openid
                      - profile
                      - groups
                      - email
                    userinfo_signed_response_alg: "none"
                    token_endpoint_auth_method: "client_secret_basic"
                    allow_multiple_auth_methods: true
    - repoURL: https://github.com/carterjgreen/home-server.git
      path: manifests/authelia
      targetRevision: HEAD
  destination:
    server: "https://kubernetes.default.svc"
    namespace: default
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
